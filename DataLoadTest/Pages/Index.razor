@inject IJSRuntime JS
@using Oracle.ManagedDataAccess.Client
@using System.Data;
@using System.Net.Http;

@using Global;
@page "/"

<h1>Data Load TEST => @gVar.col[2, 0] / @gVar.col[14, 4]</h1>
<br />
<table id="loadSample" class="display" style="width:100%;">
    <thead>
        <tr>
            <th>DATA1</th>
            <th>DATA2</th>
            <th>DATA3</th>
            <th>DATA4</th>
            <th>DATA5</th>
            <th>DATA6</th>
            <th>DATA7</th>
            <th>DATA8</th>
            <th>DATA9</th>
            <th>DATA10</th>
            <th>DATA11</th>
            <th>DATA12</th>
            <th>DATA13</th>
            <th>DATA14</th>
            <th>DATA15</th>
        </tr>
    </thead>

    @*<tbody>
            @for (int i = 0; i < 1000; i++)
            {
                <tr>
                    @for (int j = 0; j < 15; j++)
                    {
                        <td>xxoxx</td>
                    }
                </tr>
            }
        </tbody>*@
</table>

@code {


    private bool IsRender { get; set; } = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("Tables");
            @*Global.DB db = new Global.DB();
                db.OracleConnection();*@
        }
        else
        {
            Console.Out.WriteLine("Load blazor.server.js");
        }
        base.OnAfterRender(firstRender);
    }


}