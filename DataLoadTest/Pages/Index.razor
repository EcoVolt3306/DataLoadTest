@inject IJSRuntime JS
@page "/"

<h1>Data Load TEST</h1>
<br />
<table id="loadTest" class="display" style="width:100%">
    <thead>
        <tr>
            <th>DATA1</th>
            <th>DATA2</th>
            <th>DATA3</th>
            <th>DATA4</th>
            <th>DATA5</th>
            <th>DATA6</th>
            <th>DATA7</th>
            <th>DATA8</th>
            <th>DATA9</th>
            <th>DATA10</th>
            <th>DATA11</th>
            <th>DATA12</th>
            <th>DATA13</th>
            <th>DATA14</th>
            <th>DATA15</th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < 15000; i++)
        {
            <tr>
                @for (int j = 0; j < 15; j++)
                {
                    <td>xxoxx</td>
                }
            </tr>
        }
    </tbody>
</table>



@code {

    private bool IsRender { get; set; } = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Console.Out.WriteLine("ddd");
            await JS.InvokeVoidAsync("Tables");
        }
        else
        {
            Console.Out.WriteLine("xxxx");
            await JS.InvokeVoidAsync("Tables");
        }
        base.OnAfterRender(firstRender);
    }

}