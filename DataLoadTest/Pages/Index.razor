@inject IJSRuntime JS
@using Oracle.ManagedDataAccess.Client
@using System.Data;
@using System.Net.Http;


@using Global;

@page "/"

<h1>Data Load TEST => @gVar.col[2, 0] / @gVar.col[14, 4]</h1>
<br />
@*<DataLoadTest.Load.LoadData ak="@gVar.col[1,3]" />*@
<table id="loadSample" class="display" style="width:100%;">
    <thead>
        <tr>
            <th>DATA1</th>
            <th>DATA2</th>
            <th>DATA3</th>
            <th>DATA4</th>
            <th>DATA5</th>
            <th>DATA6</th>
            <th>DATA7</th>
            <th>DATA8</th>
            <th>DATA9</th>
            <th>DATA10</th>
            <th>DATA11</th>
            <th>DATA12</th>
            <th>DATA13</th>
            <th>DATA14</th>
            <th>DATA15</th>
        </tr>
    </thead>

</table>

@code {
    private bool IsRender { get; set; } = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            string newdt = Api.Common.DataTableToJSONWithStringBuilder(gVar.newDT); // My code
            string newdt2 = Api.Common.ConvertDT2Json(gVar.newDT, true);    // DPM code
            Console.WriteLine(newdt2);  // TEST


            glClass.Helper.Json2JS(this.JS, newdt2);
            @*await JS.InvokeVoidAsync("Tables");*@

            @*Response.Clear();*@// Response ???
        }
        else
        {
            Console.Out.WriteLine("Load blazor.server.js");
        }
        base.OnAfterRender(firstRender);
    }
}